define(["./my-app.js"],function(_myApp){"use strict";function _templateObject_9b166510fe1311e88d72a1529e901614(){var data=babelHelpers.taggedTemplateLiteral(["\n      ","\n\n      <style>\n        :host {\n          display: block;\n          /* max-width: 1000px; */\n          /* margin: 10em auto; */\n        }\n\n        :host h1 {\n          font-size: 44pt;\n          float: left;\n          margin: 0 0.5em;\n        }\n\n        :host div.paragraph {\n          display: block;\n          float: left;\n          width: 30em;\n          text-align: left;\n          font-size: 15pt;\n          line-height: 1.5em;\n          margin: 0 2em;\n        }\n\n        :host a {\n          margin-top: 1.5em;\n          float: left;\n        }\n      </style>\n\n      <section>\n          \n          <h1>\n            Hi, I'm Mike!\n          </h1>\n          <div class=\"paragraph\">\n            I\u2019m a Tech Lead at BBD in the R&D team, specialising on designing and building for the web. I\u2019ve been hacking on\n            the web since Geocities was a thing, have a long-lived love affair with JavaScript, and have (almost) come to terms with\n            the fact that I will never have a programmer beard. I have been working as a professional software developer for over\n            12 years. While I have worked on some interesting large-scale enterprise applications, it is the challenges of the\n            public web that really appeal to me - having earned my stripes on high volume transactional websites. I work primarily\n            in JavaScript, C# and Java, and have shipped production applications in a variety of frameworks.\n            <br />\n            <a href=\"https://twitter.com/mikegeyser/\">@mikegeyser</a>\n          </div>\n      \n      </section>\n    "]);_templateObject_9b166510fe1311e88d72a1529e901614=function _templateObject_9b166510fe1311e88d72a1529e901614(){return data};return data}var MyView1=function(_PageViewElement){babelHelpers.inherits(MyView1,_PageViewElement);function MyView1(){babelHelpers.classCallCheck(this,MyView1);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MyView1).apply(this,arguments))}babelHelpers.createClass(MyView1,[{key:"render",value:function render(){return(0,_myApp.html)(_templateObject_9b166510fe1311e88d72a1529e901614(),_myApp.SharedStyles)}}]);return MyView1}(_myApp.PageViewElement);window.customElements.define("my-view1",MyView1)});